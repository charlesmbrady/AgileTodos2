{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2020-03-26T04:40:53.749Z",
    "end": "2020-03-26T04:40:53.749Z",
    "duration": 3583,
    "testsRegistered": 6,
    "passPercent": 66.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c78b020f-1dfe-4f29-af0b-c9286dfb64ee",
      "title": "",
      "fullFile": "cypress/integration/API/user.js",
      "file": "cypress/integration/API/user.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e1931095-95c4-43fa-bf27-3c312d9c5509",
          "title": "API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /auth/register - create new user",
              "fullTitle": "API Tests POST /auth/register - create new user",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('POST', \"\".concat(Cypress.config('apiUrl'), \"/auth/user\"), {\n  firstName: 'The',\n  lastName: 'Goat',\n  email: 'theGoat@GOAT.com',\n  password: 'Password1!'\n}).then(function (response) {\n  // response.body is automatically serialized into JSON\n  expect(response.body).to.have.property('firstName', 'The'); // true\n  cy.request('DELETE', \"\".concat(Cypress.config('apiUrl'), \"/auth/user/\").concat(response.body.id)).then(function (deleteRes) {\n    expect(deleteRes.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "dee1af85-e7dc-4bb6-b00f-4fe49c96d688",
              "parentUUID": "e1931095-95c4-43fa-bf27-3c312d9c5509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT /auth/user/:id - can update a user",
              "fullTitle": "API Tests PUT /auth/user/:id - can update a user",
              "timedOut": null,
              "duration": 450,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request('POST', \"\".concat(Cypress.config('apiUrl'), \"/auth/user\"), {\n  firstName: 'adff',\n  lastName: 'reee',\n  email: 'ranom',\n  password: 'Password1!'\n}).then(function (response) {\n  // response.body is automatically serialized into JSON\n  console.log(response);\n  expect(response.body).to.have.property('firstName', 'adff'); // true\n  cy.request('PUT', \"\".concat(Cypress.config('apiUrl'), \"/auth/user/\").concat(response.id), {\n    firstName: 'anewname'\n  }).then(function (newResponse) {\n    expect(newResponse.body).to.have.property('firstName', 'anewname');\n    cy.request('DELETE', \"\".concat(Cypress.config('apiUrl'), \"/auth/user/\").concat(response.body.id)).then(function (deleteRes) {\n      expect(deleteRes.status).to.equal(200);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected [ 0 ] to have property 'firstName'",
                "estack": "AssertionError: expected [ 0 ] to have property 'firstName'\n    at getRet (http://localhost:8081/__cypress/runner/cypress_runner.js:125261:16)\n    at tryCatcher (http://localhost:8081/__cypress/runner/cypress_runner.js:165465:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:8081/__cypress/runner/cypress_runner.js:162740:29)\n    at Context.thenFn (http://localhost:8081/__cypress/runner/cypress_runner.js:125275:23)\n    at Context.then (http://localhost:8081/__cypress/runner/cypress_runner.js:125647:21)\n    at Context.<anonymous> (http://localhost:8081/__cypress/runner/cypress_runner.js:137585:21)\n    at http://localhost:8081/__cypress/runner/cypress_runner.js:137061:33\n    at tryCatcher (http://localhost:8081/__cypress/runner/cypress_runner.js:165465:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8081/__cypress/runner/cypress_runner.js:163401:31)\n    at Promise._settlePromise (http://localhost:8081/__cypress/runner/cypress_runner.js:163458:18)\n    at Promise._settlePromiseCtx (http://localhost:8081/__cypress/runner/cypress_runner.js:163495:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:8081/__cypress/runner/cypress_runner.js:160195:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:8081/__cypress/runner/cypress_runner.js:160200:10)\n    at Async.drainQueues (http://localhost:8081/__cypress/runner/cypress_runner.js:160074:14)",
                "diff": null
              },
              "uuid": "b449abc7-0103-4974-9920-a79d4dc843e7",
              "parentUUID": "e1931095-95c4-43fa-bf27-3c312d9c5509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT /auth/user/:id - can update a user",
              "fullTitle": "API Tests PUT /auth/user/:id - can update a user",
              "timedOut": null,
              "duration": 436,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request('POST', \"\".concat(Cypress.config('apiUrl'), \"/auth/user\"), {\n  firstName: 'adff',\n  lastName: 'reee',\n  email: 'ranom',\n  password: 'Password1!'\n}).then(function (response) {\n  // response.body is automatically serialized into JSON\n  console.log(response);\n  expect(response.body).to.have.property('firstName', 'adff'); // true\n  cy.request('PUT', \"\".concat(Cypress.config('apiUrl'), \"/auth/user/\").concat(response.body.id), {\n    firstName: 'anewname'\n  }).then(function (newResponse) {\n    expect(newResponse.body).to.have.property('firstName', 'anewname');\n    cy.request('DELETE', \"\".concat(Cypress.config('apiUrl'), \"/auth/user/\").concat(response.body.id)).then(function (deleteRes) {\n      expect(deleteRes.status).to.equal(200);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (name, errors, ...) } to have property 'firstName'",
                "estack": "AssertionError: expected { Object (name, errors, ...) } to have property 'firstName'\n    at getRet (http://localhost:8081/__cypress/runner/cypress_runner.js:125261:16)\n    at tryCatcher (http://localhost:8081/__cypress/runner/cypress_runner.js:165465:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:8081/__cypress/runner/cypress_runner.js:162740:29)\n    at Context.thenFn (http://localhost:8081/__cypress/runner/cypress_runner.js:125275:23)\n    at Context.then (http://localhost:8081/__cypress/runner/cypress_runner.js:125647:21)\n    at Context.<anonymous> (http://localhost:8081/__cypress/runner/cypress_runner.js:137585:21)\n    at http://localhost:8081/__cypress/runner/cypress_runner.js:137061:33\n    at tryCatcher (http://localhost:8081/__cypress/runner/cypress_runner.js:165465:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8081/__cypress/runner/cypress_runner.js:163401:31)\n    at Promise._settlePromise (http://localhost:8081/__cypress/runner/cypress_runner.js:163458:18)\n    at Promise._settlePromiseCtx (http://localhost:8081/__cypress/runner/cypress_runner.js:163495:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:8081/__cypress/runner/cypress_runner.js:160195:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:8081/__cypress/runner/cypress_runner.js:160200:10)\n    at Async.drainQueues (http://localhost:8081/__cypress/runner/cypress_runner.js:160074:14)",
                "diff": null
              },
              "uuid": "81d431bd-c27b-421d-b125-16410204a127",
              "parentUUID": "e1931095-95c4-43fa-bf27-3c312d9c5509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dee1af85-e7dc-4bb6-b00f-4fe49c96d688"
          ],
          "failures": [
            "b449abc7-0103-4974-9920-a79d4dc843e7",
            "81d431bd-c27b-421d-b125-16410204a127"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1110,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30ba383b-942c-420d-9d53-ce34af2b0ba3",
      "title": "",
      "fullFile": "cypress/integration/E2E/Registration/register1.js",
      "file": "cypress/integration/E2E/Registration/register1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f4fe357-f326-4837-b180-4e7c8ce43656",
          "title": "register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User can visit registration page",
              "fullTitle": "register User can visit registration page",
              "timedOut": null,
              "duration": 814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/register');",
              "err": {},
              "uuid": "24c6562d-a3ef-4ad2-8750-b79935a58904",
              "parentUUID": "9f4fe357-f326-4837-b180-4e7c8ce43656",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Can register a new a user",
              "fullTitle": "register Can register a new a user",
              "timedOut": null,
              "duration": 1612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var firstName = 'Charles';\nvar lastName = 'Brady';\nvar email = 'theGoat@gmail.com';\nvar password = 'Password1!';\ncy.visit('/registration'); // Fill out form\ncy.get(_registration[\"default\"].FIRST_NAME).type(firstName);\ncy.get(_registration[\"default\"].LAST_NAME).type(lastName);\ncy.get(_registration[\"default\"].EMAIL).type(email);\ncy.get(_registration[\"default\"].PASSWORD).type(password);\ncy.get(_registration[\"default\"].PASSWORD_CONFIRMATION).type(password); // Submit\ncy.get(_registration[\"default\"].SUBMIT).click();",
              "err": {},
              "uuid": "efc7a76d-9908-41c0-91ff-bf7342202167",
              "parentUUID": "9f4fe357-f326-4837-b180-4e7c8ce43656",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24c6562d-a3ef-4ad2-8750-b79935a58904",
            "efc7a76d-9908-41c0-91ff-bf7342202167"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2426,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f91c707e-c4be-4aba-b0b4-015218c49fbd",
      "title": "",
      "fullFile": "cypress/integration/test-spec.js",
      "file": "cypress/integration/test-spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d169a8a-e91b-44c1-b433-f72d5a8325f0",
          "title": "Canary Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Canary test",
              "fullTitle": "Canary Test Canary test",
              "timedOut": null,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(1).to.equal(1);",
              "err": {},
              "uuid": "5b9963a9-778f-4197-9005-b66ea1ad2ff9",
              "parentUUID": "9d169a8a-e91b-44c1-b433-f72d5a8325f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b9963a9-778f-4197-9005-b66ea1ad2ff9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/integration/reports/mocha",
        "quiet": true,
        "html": false,
        "overwrite": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}